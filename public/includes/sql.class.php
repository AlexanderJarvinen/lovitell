<? 

// SQL Class Lite

define('SQL_UNKNOWN'	,  0);
define('SQL_PGSQL'	,  1);
define('SQL_MYSQL'	,  2);
define('SQL_MSSQL'	,  3);

class CDatabase2
{
  var $ServerType = ''; 
  var $Connection; 	

  var $FParams;     	

  function CDatabase2($AParams) 		{ $this->SetParameters($AParams);	}

  function SetParameters($AParams)	{ $this->FParams   = $AParams;          }

  function GetServerType()  		{ return $this->ServerType; 		}
  function GetConnection() 		{ return $this->Connection; 		}

  function Open()   {}
  function Close()  {}

}

class CMySQLDatabase extends CDatabase2
{
  var $ServerType = SQL_MYSQL;

  function Open()
  {
    if (!$this->Connection = @mysql_pconnect($this->FParams[server], $this->FParams[login], $this->FParams[password])) return FALSE;
    @mysql_select_db($this->FParams[database]);      
    return TRUE;
  }
}

class CMSSQLDatabase extends CDatabase2
{
  var $ServerType = SQL_MSSQL;

  function Open()
  {
    $this->Connection = @mssql_pconnect($this->FParams[server], $this->FParams[login], $this->FParams[password]);
    if (!$this->Connection) return FALSE;
    @mssql_select_db($this->FParams[database]);      
    return TRUE;
  }
}

class CQuery 
{
  var $query;
  var $db;
  var $expression;

  function CQuery($database, $expression)
  {
    $this->database   = $database;
    $this->expression = $expression;

    switch ($this->database->GetServerType())
    {
      case SQL_MYSQL:
        $this->query = new CMySQLQuery($this->database->GetConnection(), $expression);
        break;
      case SQL_MSSQL:
        $this->query = new CMSSQLQuery($this->database->GetConnection(), $expression);
        break;
    };
  }

  function exec($expression) 
  {  
    $this->expression = $expression;
    return $this->query->exec($expression); 
  }

  function fetch()		{  return $this->query->fetch();		 }	
  function num_fields()	{  return $this->query->num_fields();	 }
  function num_rows()		{  return $this->query->num_rows();        }
  function field_type($idx)	{	return $this->query->field_type($idx);		}
  function field_name($idx)	{	return $this->query->field_name($idx);		}
  function field_len()		{	return $this->query->field_len();		}
  function field_flags()	{	return $this->query->field_flags();		}
  function error()	      {  return $this->query->error();		 }
  function error_code()       {  return $this->query->error_code();	 }
  function insert_id()	      {  return $this->query->insert_id();	 }
}

class CCustomQuery
{
  var $link;
  var $dataset;
  var $row;
  var $errmsg;

  function exec($expression)   {  return $this->query->exec($expression); }
  function fetch()	      	{  return $this->query->fetch();		 }	
  function num_fields()        {  return $this->query->num_fields();	 }
  function num_rows()          {  return $this->query->num_rows();        }
  function error()	        {  return $this->query->error();		 }
  function error_code()        {  return $this->query->error_code();	 }
  function insert_id()	        {  return $this->query->insert_id();       }
}

class CMySQLQuery extends CCustomQuery
{
  function CMySQLQuery($link, $expression='')
  {
    $this->link = $link;
    if ($expression != '') $this->exec($expression);
  }

  function _browse_array($data)
  {
    $result = '';
    foreach($data as $key=>$value) {
      $result .= ''.$key.' = ['.$value.']<br>';
    }
    return $result;
  }

  // Надо эту самодеятельность выкинуть отсюда нафиг...
  function _error_template($expression, $errno, $error)
  {
    if ($errno=='1045') // перехватываем гадский непонятный глюк мускула с access denied под виндой.
      return 'Sorry! We have a system error. Please just reload the current page.';
    else
      return 
    '<html><head><title>SQL ERROR</title></head><body bgcolor="#FFFFFF">'.
    '<b>ERROR: Wrong SQL expression</b>'.
    '<hr size="1" width="100%" noshade>'.
    'SQL Expression: '.
    '<xmp>'.$expression.'</xmp>'.
    'Error ('.$errno.'): '.
    '<xmp>'.$error.'</xmp>'.
    '<hr size="1" width="100%" noshade>'.
    '<table width="100%" cellpadding="0" cellspacing="0" border="0">'.
    '<tr><td valign="top" align="right" nowrap="nowrap">Debug mode:&nbsp;</td><td width="100%"><b><font color="red">ON</font></b></td></tr>'.
    '<tr><td valign="top" align="right" nowrap="nowrap">Page:&nbsp;</td><td>http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'].'</td></tr>'.
    '<tr><td valign="top" align="right" nowrap="nowrap">Request:&nbsp;</td><td width="100%">'.$this->_browse_array($_REQUEST).'</td></tr>'.
    '</table>'.
    '<hr size="1" width="100%" noshade>'.
    '<small> This page is generated by '.FW_NAME.' v'.FW_VERSION.' '.FW_RELEASE.'<br> '.FW_COPYHTML.'</small>'.
    '</body></html>';
  }

  function exec($expression)	
  {	
    if ((!$this->dataset = @mysql_query($expression, $this->link)))
      die ($this->_error_template($expression, mysql_errno(), mysql_error()));
  }

  function fetch()		{	return @mysql_fetch_object($this->dataset);		}
  function num_rows()		{	return @mysql_num_rows($this->dataset);			}
  function num_fields()		{	return @mysql_num_fields($this->dataset);		}
  function field_type($idx)		{	return @mysql_field_type($this->dataset, $idx);		}
  function field_name($idx)	{	return @mysql_field_name($this->dataset, $idx);		}
  function field_len()		{	return @mysql_field_len($this->dataset);		}
  function field_flags()	{	return @mysql_field_flags($this->dataset);		}

  function error()		{	return @mysql_error();					}
  function error_code()		{	return @mysql_errno();					}
  function insert_id()		{	return @mysql_insert_id();				}
}

class CMSSQLQuery extends CCustomQuery
{
  var $error;	
  function CMSSQLQuery($link, $expression='')
  {
    $this->link = $link;
    if ($expression != '') {
    	if(!$this->exec($expression))
    	{
	    	$this->error = true;
    	}
    	else
    	{
    		$this->error = false;
    	}
    }
  }

  function _browse_array($data)
  {
    $result = '';
    foreach($data as $key=>$value) {
      $result .= ''.$key.' = ['.$value.']<br>';
    }
    return $result;
  }

  // Надо эту самодеятельность выкинуть отсюда нафиг...
  function _error_template($expression, $errno, $error)
  {
    if ($errno=='1045') // перехватываем гадский непонятный глюк мускула с access denied под виндой.
      return 'Sorry! We have a system error. Please just reload the current page.';
    else
      return 
    '<html><head><title>SQL ERROR</title></head><body bgcolor="#FFFFFF">'.
    '<b>ERROR: Wrong SQL expression</b>'.
    '<hr size="1" width="100%" noshade>'.
    'SQL Expression: '.
    '<xmp>'.$expression.'</xmp>'.
    'Error ('.$errno.'): '.
    '<xmp>'.$error.'</xmp>'.
    '<hr size="1" width="100%" noshade>'.
    '<table width="100%" cellpadding="0" cellspacing="0" border="0">'.
    '<tr><td valign="top" align="right" nowrap="nowrap">Debug mode:&nbsp;</td><td width="100%"><b><font color="red">ON</font></b></td></tr>'.
    '<tr><td valign="top" align="right" nowrap="nowrap">Page:&nbsp;</td><td>http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'].'</td></tr>'.
    '<tr><td valign="top" align="right" nowrap="nowrap">Request:&nbsp;</td><td width="100%">'.$this->_browse_array($_REQUEST).'</td></tr>'.
    '</table>'.
    '<hr size="1" width="100%" noshade>'.
    '<small> This page is generated by '.FW_NAME.' v'.FW_VERSION.' '.FW_RELEASE.'<br> '.FW_COPYHTML.'</small>'.
    '</body></html>';
  }

  function exec($expression)	
  {	
    if ((!$this->dataset = @mssql_query($expression, $this->link)))
    {	    
    	return false; 
    }
    return true;
  }

  function fetch()		{	return @mssql_fetch_object($this->dataset);		}
  function num_rows()		{	return @mssql_num_rows($this->dataset);			}
  function num_fields()		{	return @mssql_num_fields($this->dataset);		}
  function field_type($idx)	{	return @mssql_field_type($this->dataset, $idx);		}
  function field_name($idx)	{	return @mssql_field_name($this->dataset, $idx);		}
  function field_len()		{	return @mssql_field_len($this->dataset);		}
  function field_flags()	{	return @mssql_field_flags($this->dataset);		}

  function error()		{	return @mssql_error();					}
  function error_code()		{	return @mssql_errno();					}
  function insert_id()		{	return @mssql_insert_id();				}
}

?>